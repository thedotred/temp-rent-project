<div id="tilelayout"></div>

<div id="filter_window" class="container" style="display:none">
    <div id="filter"></div>
</div>

<script id="grid-template" type="text/x-kendo-template">
  <div id="grid" style="font-size: small;"></div>
</script>

<script>
    let data, dataSource;

    $("#tilelayout").kendoTileLayout({
        containers: [
            {
                colSpan: 1,
                rowSpan: 1,
                header: { text: `Tenant Lists` },
                bodyTemplate:
                    kendo.template($("#grid-template").html())
            },
        ],
        columns: 1,
        columnsWidth: '100%',
        rowsHeight: 'auto',
        reorderable: false,
        resizable: false
    });

    $(document).ready(function () {
        let model = {
            id: "_id",
            fields: {
                _id: { editable: false, nullable: true },
                property: {
                    type: 'object', 
                    defaultValue: {
                        _id: null, 
                        property_name: null
                    }
                },
                unit: { 
                    type: 'object', 
                    defaultValue: {
                        _id: null,
                        unit_name: null
                    }
                },
                tenant_name: { type: 'string', validation: { required: true } },
                contact_number: { type: 'string' },
                lease_start: { type: 'date', validation: { required: true } },
                lease_end: { type: 'date', validation: { required: true } },
                lease_amount: { type: 'number', validation: { required: true } },
                due_day: { type: 'number', validation: { required: true } },
                deposite_amount: { type: 'number' },
                isActive: { type: "boolean", defaultValue: true },
            }
        };

        dataSource = new kendo.data.DataSource({
            dataType: "json",
            transport: {
                read: {
                    url: "/api/tenant/query/get",
                    type: 'POST',
                    complete: function (e) {
                        kendoPopUpNotifications('success', 'Data fetching complete');
                    }
                },
                update: {
                    url: "/api/tenant/update",
                    type: "POST",
                },
                destroy: {
                    url: "/api/tenant/delete",
                    type: "POST",
                },
                create: {
                    url: "/api/tenant/create",
                    type: "POST",
                },
                parameterMap: function (options, operation) {
                    let pageSize = dataSource.pageSize(),
                        page = dataSource.page();
                    if (operation === "read") {
                        return {
                            models: kendo.stringify(parseFilter()),
                            skip: (page - 1) * (pageSize ? pageSize : 0),
                            limit: (pageSize ? pageSize : 0)
                        };
                    }
                    if (operation !== "read" && options.models) {
                        return { models: kendo.stringify(options.models) };
                    }
                },
            },
            requestStart: function (e) {
                const wnd = $("#filter_window").data("kendoWindow");
                if (wnd && !wnd.element.is(":hidden")) {
                    wnd.close();
                }
            },
            batch: true,
            pageSize: 20,
            schema: {
                total: 'total',
                data: "data",
                model: model
            }
        });
        tenantGrid();
        createFilter();
    });

    function tenantGrid() {
        let column = [
            { field: "tenant_name", title: 'Tenant Name', width: "200px" },
            { field: "property.property_name", title: 'Property Name', editor: propertyNameEditor, width: "200px" },
            { field: "unit.unit_name", title: 'Unit Name', editor: unitNameEditor, width: "200px" },
            { field: "contact_number", title: 'Contanct Number', width: "200px" },
            { field: "lease_start", title: 'Lease Start Date', width: "150px", format: "{0:yyyy-MM-dd}" },
            { field: "lease_end", title: 'Lease End Date', width: "150px", format: "{0:yyyy-MM-dd}" },
            { field: "lease_amount", title: 'Lease Amount', width: "150px", format: '{0:n}', attributes: {"class": "text-right"} },
            { field: "due_day", title: 'Due Day', width: "150px" },
            { field: "deposite_amount", title: 'Deposite Amount', width: "150px", format: '{0:n}', attributes: { "class": "text-right" } },
            {
                command:
                    [
                        { name: "edit", text: { edit: " ", update: "Update", cancel: "Cancel" } },
                        { name: "destroy", text: " " }
                    ], title: "Options", width: "120px"
            }
        ];

        $("#grid").kendoGrid({
            dataSource: dataSource,
            pageable: {
                pageSizes: true,
                buttonCount: 5,
                refresh: true
            },
            mobile: true,
            sortable: true,
            reorderable: true,
            columnMenu: true,
            height: 550,
            toolbar: [
                "create",
                {
                    template: `<span class='k-button' onclick=filterWindow()><i class='k-icon k-i-filter'></i>Filter</span>`
                },
                "excel",
                {
                    template: `<span class="k-spacer"></span>`
                },
                "search"
            ],
            noRecords: true,
            messages: {
                noRecords: "No data available on current page."
            },
            columns: column,
            editable: "popup"
        });
    };

    //filter Window 
    function filterWindow(event) {
        var configuration = {
            id: 'filter_window',
            title: 'Filter Window',
            width: 700,
            height: 400
        };
        kendoWindow(configuration);
    }

    function createFilter() {
        $("#filter").kendoFilter({
            dataSource: dataSource,
            applyButton: true,
            fields: [
                {
                    name: "unit._id",
                    label: "Unit Name",
                    type: "string",
                    editorTemplate: unitNameFilterEditor
                },
                {
                    name: "property._id",
                    label: "Property Name",
                    type: "string",
                    editorTemplate: propertyNameFilterEditor
                },
                {
                    name: "tenant_name",
                    label: "Tenant Name",
                    type: "string"
                },
                {
                    name: "contact_number",
                    label: "Contact Number",
                    type: "string"
                },
                {
                    name: "lease_start",
                    label: "Lease Start Date",
                    type: "date"
                },
                {
                    name: "lease_end",
                    label: "Lease End Date",
                    type: "date"
                },
                {
                    name: "lease_amount",
                    label: "Lease Amount",
                    type: "number"
                },
                {
                    name: "due_day",
                    label: "Due Day",
                    type: "number"
                },
                {
                    name: "deposite_amount",
                    label: "Deposite Amount",
                    type: "number"
                },
            ],
            operators: {
                string: {
                    contains: 'Contains',
                    startsWith: 'Starts with',
                    eq: 'Is equal to',
                    isnull: "Is empty",
                    isnotnull: "Is not empty"
                },
                number: {
                    eq: 'Is equal to',
                    gte: 'Greater or equal to',
                    gt: 'Greater than',
                    lte: 'Less or equal to',
                    lt: 'Less than',
                },
                date: {
                    gte: "Greater than or equal to",
                    lt: "Less than",
                    isnull: "Is empty",
                    isnotnull: "Is not empty"
                }
            },
            expression: {
                logic: "and",
            },
        });
    }

    function parseFilter() {
        if ($("#grid").data('kendoGrid').dataSource.filter()) {
            let filters = $("#grid").data('kendoGrid').dataSource.filter().filters,
                query = [],
                condition = {};
            filters.forEach(item => {
                let obj = {};
                if (item.operator === 'isnull') {
                    obj[item.field] = null;
                } else if (item.operator === 'isnotnull') {
                    obj[item.field] = { $ne: null };
                } else if (item.operator === 'eq') {
                    obj[item.field] = item.value;
                } else if (item.operator !== 'contains') {
                    obj[item.field] = {};
                    obj[item.field][`$${item.operator}`] = item.value;
                } else {
                    obj[item.field] = {};
                    obj[item.field] = { $regex: item.value, $options: "$i" };
                }
                query.push(obj);
            });
            condition[`$${dataSource.filter().logic}`] = query;
            return condition;
        } else {
            return {}
        }
    }

    function parseFilterCaseCadeDropdown (filter)  {
        if (filter) {
            let filters = filter.filters,
                query = [],
                condition = {};
            filters.forEach(item => {
                let obj = {};
                if (item.operator === 'isnull') {
                    obj[item.field] = null;
                } else if (item.operator === 'isnotnull') {
                    obj[item.field] = { $ne: null };
                } else if (item.operator === 'eq') {
                    obj[item.field] = item.value;
                } else if (item.operator !== 'contains') {
                    obj[item.field] = {};
                    obj[item.field][`$${item.operator}`] = item.value;
                } else {
                    obj[item.field] = {};
                    obj[item.field] = { $regex: item.value, $options: "$i" };
                }
                query.push(obj);
            });
            condition[filter.logic] = query;
            return condition;
        } else {
            return {}
        }
    }

    function propertyNameEditor(container, options) {
        let input = $(`<input id="property" name="property" style="width: 100%;" required />`);
        input.appendTo(container)
        input.kendoDropDownList({
            autoClose: false,
            autoBind: false,
            dataTextField: 'property_name',
            dataValueField: '_id',
            noDataTemplate: "No property found",
            footerTemplate: 'Total number of <strong>#: instance.dataSource.total() #</strong> property found',
            dataSource: {
                type: "json",
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/api/property/get"
                    }
                }
            }
        });
    }

    function unitNameEditor(container, options) {
        let input = $(`<input id="unit" name="unit" style="width: 100%;" disabled="disabled" required />`);
        input.appendTo(container)
        input.kendoDropDownList({
            autoClose: false,
            autoBind: false,
            cascadeFrom: "property",
            dataTextField: 'unit_name',
            dataValueField: '_id',
            noDataTemplate: "No unit found",
            dataSource: {
                type: "json",
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/api/unit/query/get",
                        type: 'POST'
                    },
                    parameterMap: function (options, operation) {
                        return {
                            models: kendo.stringify({'property._id': options.filter.filters[0].value}),
                            skip: 0,
                            limit: 20,
                        };
                    }
                },
                pageSize: 20,
                schema: {
                    total: 'total',
                    data: "data",
                    model: {
                        id: "_id",
                        fields: {
                            _id: { editable: false, nullable: true },
                            property: {
                                type: 'object', defaultValue: {
                                    _id: null, property_name: null
                                }
                            },
                            unit_name: { type: "string", validation: { required: true } },
                            isActive: { type: "boolean", defaultValue: true },
                        }
                    }
                }
            }
        });
    }

    function unitNameFilterEditor(container, options) {
        let input = $(`<input data-bind="value: value" id="unit_name" name="unit_name" style="width: 180px;" required />`);
        input.appendTo(container)
        input.kendoDropDownList({
            autoClose: false,
            autoBind: false,
            filter: "contains",
            dataTextField: 'unit_name',
            dataValueField: '_id',
            noDataTemplate: "No unit found",
            footerTemplate: 'Total number of <strong>#: instance.dataSource.total() #</strong> units found',
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "/api/unit/get"
                    }
                }
            }
        });
    }

    function propertyNameFilterEditor(container, options) {
        let input = $(`<input data-bind="value: value" id="property_name" name="property_name" style="width: 180px;" required />`);
        input.appendTo(container)
        input.kendoDropDownList({
            autoClose: false,
            autoBind: false,
            filter: "contains",
            dataTextField: 'property_name',
            dataValueField: '_id',
            noDataTemplate: "No property found",
            footerTemplate: 'Total number of <strong>#: instance.dataSource.total() #</strong> properties found',
            dataSource: {
                type: "json",
                transport: {
                    read: {
                        url: "/api/property/get"
                    }
                }
            }
        });
    }

</script>